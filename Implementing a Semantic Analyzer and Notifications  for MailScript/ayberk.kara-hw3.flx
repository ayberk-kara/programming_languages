%{
#include "ayberk.kara-hw3.h"
#include "ayberk.kara-hw3.tab.h"

int nested = 0;
int lineCount = 1;
%}

tNEWLINE \n

tLOCALPART [A-Za-z0-9\-_]+(([A-Za-z0-9\-_]*|\.?)[A-Za-z0-9\-_])*
tDOMAIN [A-Za-z0-9]+[A-Za-z0-9\-]*[A-Za-z0-9]+|[A-Za-z0-9]{1}

/* Comments */
tSLC  "//" 
tOMLC "/\*" 
tCMLC "*/"   


%x singleLineComment multiLineComment
%%
{tSLC}  BEGIN(singleLineComment);
<singleLineComment>{tNEWLINE}    {BEGIN(INITIAL);}
<singleLineComment>.    ;


{tOMLC} {BEGIN(multiLineComment); ++nested;}
<multiLineComment>{tCMLC}      { if (--nested == 0) BEGIN(INITIAL); }
<multiLineComment>{tOMLC}     ++nested;
<multiLineComment>{tNEWLINE}    {} ;
<multiLineComment>.         ;

"Mail" return tMAIL;
"end"[ \t\n\r\f]+"Mail" {return tENDMAIL;}
    
"schedule" return tSCHEDULE;
"end"[ \t\n\r\f]+"schedule" {return tENDSCHEDULE;}

"send" return  tSEND;
"set" return tSET;
"to" return tTO;
"from" return tFROM;
@ return tAT;
, return tCOMMA;
: return tCOLON;
\( return tLPR;
\) return tRPR;
\[ return tLBR;
\] return tRBR;
[a-zA-Z\_]+[a-zA-Z0-9\_]* {
    yylval.identNode.lineNum = lineCount;

    char *result = (char *)malloc(strlen(yytext)+1);
    strcpy(result,yytext);
    yylval.identNode.value = result;
    
    
    return tIDENT;}


["][^\"]*["] {
    yylval.stringNode.lineNum = lineCount;

    char *result = (char *)malloc(strlen(yytext)+1);
    strcpy(result,yytext);
    yylval.stringNode.value = result;
    return tSTRING;}

[0-9]{2}"/"[0-9]{2}"/"[0-9]{4}|[0-9]{2}\.[0-9]{2}\.[0-9]{4}|[0-9]{2}-[0-9]{2}-[0-9]{4} {
    
    yylval.dateNode.lineNum = lineCount;

    char *result = (char *)malloc(strlen(yytext)+1);
    strcpy(result, yytext);
    yylval.dateNode.value = result;

    if(result[2]=='/'){
         sscanf(yytext, "%d/%d/%d", &(yylval.dateNode.day), &(yylval.dateNode.month), &(yylval.dateNode.year));
    }
    else if(result[2]=='.'){
         sscanf(yytext, "%d.%d.%d", &(yylval.dateNode.day), &(yylval.dateNode.month), &(yylval.dateNode.year));
    }
    else if(result[2]=='-'){
         sscanf(yytext, "%d-%d-%d", &(yylval.dateNode.day), &(yylval.dateNode.month), &(yylval.dateNode.year));
    }
return tDATE;}
[0-9]{2}:[0-9]{2} {
    
    yylval.timeNode.lineNum = lineCount;

    char *result = (char *)malloc(strlen(yytext)+1);
    strcpy(result, yytext);
    yylval.timeNode.value = result;

    sscanf(yytext, "%d:%d", &(yylval.timeNode.hour), &(yylval.timeNode.minute));
    return tTIME;}

{tLOCALPART}"@"({tDOMAIN}"."{tDOMAIN}"."{tDOMAIN}|{tDOMAIN}"."{tDOMAIN}) {
    char *result = (char *)malloc(strlen(yytext));
    strcpy(result,yytext);
    yylval.adressString = result;
    return tADDRESS;}
    
[ \t]+
{tNEWLINE}    {lineCount += 1;}
.	    return yytext[0];
%%
